// Code generated by app-config; DO NOT EDIT.

package config

import "io/fs"

type BaseConfig struct {
	Auth        Auth        `json:"auth" koanf:"auth"`
	Persistence Persistence `json:"persistence" koanf:"persistence"`
	Views       Views       `json:"views" koanf:"views"`
}

type Auth struct {
	Audience              []string `json:"audience" koanf:"audience"`
	AuthScheme            string   `json:"auth_scheme" koanf:"auth_scheme"`
	ContextKey            string   `json:"context_key" koanf:"context_key"`
	ExtendedTokenDuration int      `json:"extended_token_duration" koanf:"extended_token_duration"`
	Issuer                string   `json:"issuer" koanf:"issuer"`
	RejectedRouteDefault  string   `json:"rejected_route_default" koanf:"rejected_route_default"`
	RejectedRouteKey      string   `json:"rejected_route_key" koanf:"rejected_route_key"`
	SigningKey            string   `json:"signing_key" koanf:"signing_key"`
	SigningMethod         string   `json:"signing_method" koanf:"signing_method"`
	TokenExpiration       int      `json:"token_expiration" koanf:"token_expiration"`
	TokenLookup           string   `json:"token_lookup" koanf:"token_lookup"`
}

type Persistence struct {
	DSN                   string `json:"dsn" koanf:"dsn"`
	Debug                 bool   `json:"debug" koanf:"debug"`
	Driver                string `json:"driver" koanf:"driver"`
	OtelIdentifier        string `json:"otel_identifier" koanf:"otel_identifier"`
	PingTimeoutExpression string `json:"ping_timeout_expression" koanf:"ping_timeout_expression"`
	Server                string `json:"server" koanf:"server"`
}

type Views struct {
	AssetsFS          fs.FS          `json:"assets_fs" koanf:"assets_fs"`
	CSSPath           string         `json:"css_path" koanf:"css_path"`
	Debug             bool           `json:"debug" koanf:"debug"`
	DirFS             string         `json:"dir_fs" koanf:"dir_fs"`
	DirOS             string         `json:"dir_os" koanf:"dir_os"`
	Embed             bool           `json:"embed" koanf:"embed"`
	Ext               string         `json:"ext" koanf:"ext"`
	JSPath            string         `json:"js_path" koanf:"js_path"`
	Reload            bool           `json:"reload" koanf:"reload"`
	RemovePathPrefix  string         `json:"remove_path_prefix" koanf:"remove_path_prefix"`
	TemplateFunctions map[string]any `json:"template_functions" koanf:"template_functions"`
	TemplatesFS       fs.FS          `json:"templates_fs" koanf:"templates_fs"`
}

func (v *Views) SetAssetsFS(val fs.FS) {
	v.AssetsFS = val
}

func (v *Views) SetTemplateFunctions(val map[string]any) {
	v.TemplateFunctions = val
}

func (v *Views) SetTemplatesFS(val fs.FS) {
	v.TemplatesFS = val
}
